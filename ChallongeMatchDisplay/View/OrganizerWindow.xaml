<Window x:Class="Fizzi.Applications.ChallongeVisualization.View.OrganizerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:lview="clr-namespace:Fizzi.Applications.ChallongeVisualization.View"
        xmlns:lm="clr-namespace:Fizzi.Applications.ChallongeVisualization.Model"
        Title="Tournament Organizer Control" Height="533" Width="917" Icon="/Challonge%20Match%20Display;component/Graphicloads-Food-Drink-Icecream-2.ico" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ObjectDataProvider x:Key="StationTypes" MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="lm:StationType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <CollectionViewSource x:Key="Matches" Source="{Binding OpenMatches}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Match.RoundOrder" Direction="Ascending" />
                <scm:SortDescription PropertyName="Match.IsWinners" Direction="Ascending" />
                <scm:SortDescription PropertyName="Match.Identifier" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="Stations" Source="{Binding OpenStations}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Order" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <lview:TimeSpanToBrushConverter x:Key="TimeSpanToBrushConv" />
        <lview:TimeSpanToShortStringConverter x:Key="TimeSpanToShortStringConv" />
        <lview:ObjectEqualityConverter x:Key="ObjectEqualityConv" />
        <lview:NewMatchOptionSelectionConverter x:Key="NewMatchOptionSelectionConv" />

        <Style TargetType="DataGrid">
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding AutoAssignPending}" />
        <KeyBinding Key="F2" Command="{Binding CallPendingAnywhere}" />
    </Window.InputBindings>
    <Window.Style>
        <Style TargetType="Window">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                    <Setter Property="Cursor" Value="Wait" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Grid Name="RootGrid">
        <!-- Logic for disabling items when organizer is busy with a task -->
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                        <Setter Property="IsHitTestVisible" Value="False" />
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Menu Bar -->
        <Menu Grid.ColumnSpan="2" Grid.Row="0" Height="23">
            <MenuItem Header="File">
                <MenuItem Header="Settings" Click="Settings_Click" />
                <MenuItem Header="Exit" Click="ExitMenu_Click" />
            </MenuItem>
            <MenuItem Header="Matches">
                <MenuItem Header="New Match Action">
                    <MenuItem IsCheckable="True" Header="None" IsChecked="{Binding Source={x:Static lm:GlobalSettings.Instance}, Path=SelectedNewMatchAction, 
                        Converter={StaticResource NewMatchOptionSelectionConv}, ConverterParameter=0}" />
                    <MenuItem IsCheckable="True" Header="Assign" IsChecked="{Binding Source={x:Static lm:GlobalSettings.Instance}, Path=SelectedNewMatchAction, 
                        Converter={StaticResource NewMatchOptionSelectionConv}, ConverterParameter=1}" />
                    <MenuItem IsCheckable="True" Header="Call Anywhere" IsChecked="{Binding Source={x:Static lm:GlobalSettings.Instance}, Path=SelectedNewMatchAction, 
                        Converter={StaticResource NewMatchOptionSelectionConv}, ConverterParameter=2}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Auto-Assign Pending" InputGestureText="F1" Command="{Binding AutoAssignPending}" />
                <MenuItem Header="Call Pending Anywhere" InputGestureText="F2" Command="{Binding CallPendingAnywhere}" />
                <Separator />
                <MenuItem Header="Clear All Station Assignments" Command="{Binding ClearAllAssignments}" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Click="About_Click" />
            </MenuItem>
        </Menu>

        <GroupBox Grid.Row="1" Grid.Column="0" Margin="3" Header="Station Selection">
            <DockPanel>
                <Button Margin="3" DockPanel.Dock="Bottom" Content="Import New Station List" Click="ImportStationsButton_Click" />
                <DockPanel DockPanel.Dock="Bottom" Width="232">
                    <Button Margin="3" DockPanel.Dock="Left" Content="Remove Station" Width="108" Click="RemoveStation_Click" />
                    <Button Margin="3" DockPanel.Dock="Right" Content="Move Down" Width="108" Click="MoveDown_Click" />
                </DockPanel>
                <DockPanel DockPanel.Dock="Bottom" Width="232">
                    <Button Margin="3" DockPanel.Dock="Left" Content="Add Station" Width="108" Click="AddStation_Click" />
                    <Button Margin="3" DockPanel.Dock="Right" Content="Move Up" Width="108" Click="MoveUp_Click" />
                </DockPanel>

                <GroupBox Margin="3" DockPanel.Dock="Bottom" Header="Selection">
                    <TextBlock Margin="3" HorizontalAlignment="Center" Text="{Binding SelectedStation.Name, FallbackValue=No Selection}" />
                </GroupBox>

                <DataGrid Name="StationsDataGrid" Margin="3" ItemsSource="{Binding Source={StaticResource Stations}}" 
                          SelectedItem="{Binding SelectedStation}" SelectionMode="Single" AutoGenerateColumns="False" CellEditEnding="StationEdit" CanUserAddRows="True">
                    <DataGrid.Resources>
                        <Style x:Key="SelectedStyle" TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource ObjectEqualityConv}">
                                            <Binding />
                                            <Binding ElementName="StationsDataGrid" Path="DataContext.SelectedStation" />
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <Setter Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                                    <Setter Property="BorderBrush" Value="{x:Static SystemColors.HighlightBrush}" />
                                    <Setter Property="Foreground" Value="White" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="False" Header="Name" Width="*" Binding="{Binding Name}" CellStyle="{StaticResource SelectedStyle}" />
                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource StationTypes}}" SelectedItemBinding="{Binding Type}" IsReadOnly="False" Header="Auto Type" Width="Auto" CellStyle="{StaticResource SelectedStyle}" />
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>


        <DockPanel Grid.Row="1" Grid.Column="1">
            <GroupBox x:Name="scoreboard" Header="Primary Streaming Station" DockPanel.Dock="Top" Margin="0,3,4,0">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Label x:Name="p1NameLabel" Padding="0" Content="Player 1 " HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,1,0,0" />
                    <TextBox x:Name="p1Name" Grid.Column="1" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Player One" VerticalAlignment="Top" Margin="0,1,3,0" TextChanged="overlayChanged" />
                    <Label x:Name="roundLabel" Grid.Row="1" Padding="0" Content="Round " HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,2,0,1" />
                    <TextBox x:Name="round" Grid.Row="1" Grid.Column="1" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Casuals" VerticalAlignment="Top" Margin="0,1,3,0" TextChanged="overlayChanged" />
                    <TextBox x:Name="p1Score" Padding="17,-14,0,0" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="0" Width="65" Margin="0" Grid.RowSpan="2" FontSize="48" FontWeight="Bold" MaxLines="1" MinLines="1" TextAlignment="Center" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" PreviewMouseWheel="ScoreScrollWheel" VerticalAlignment="Center" Height="43" TextChanged="overlayChanged"  />
                    <ScrollBar x:Name="p1ScoreScroll" Value="{Binding ElementName=p1Score, Path=Text}" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.RowSpan="2" Width="18" Height="41" Margin="1,1,0,0" BorderThickness="1" Maximum="99" SmallChange="1">
                        <ScrollBar.LayoutTransform>
                            <RotateTransform Angle="180" />
                        </ScrollBar.LayoutTransform>
                    </ScrollBar>
                    <Button x:Name="swap" Grid.Column="3" HorizontalAlignment="Left" Width="75" Grid.RowSpan="2" Height="43" VerticalAlignment="Center" Margin="5,0" Click="swap_Click">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Marlett" FontSize="20" Text="3" Margin="0,2,0,0" />
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Margin="-2,0,0,0" LineStackingStrategy="BlockLineHeight" LineHeight="13.333">Switch<LineBreak/>Sides</TextBlock>
                            <TextBlock DockPanel.Dock="Right" HorizontalAlignment="Right" FontFamily="Marlett" FontSize="20" Text="4" VerticalAlignment="Center" Margin="0,2,0,0" />
                        </DockPanel>
                    </Button>
                    <TextBox x:Name="p2Score" Padding="0,-14,19,0" Grid.Row="0" Grid.Column="4" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="0" Width="65" Margin="0" Grid.RowSpan="2" FontSize="48" FontWeight="Bold" MaxLines="1" MinLines="1" TextAlignment="Center" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" PreviewMouseWheel="ScoreScrollWheel" VerticalAlignment="Center" Height="43" TextChanged="overlayChanged"  />
                    <ScrollBar x:Name="p2ScoreScroll" Value="{Binding ElementName=p2Score, Path=Text}" Grid.Column="4" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.RowSpan="2" Width="18" Height="41" Margin="0,1,1,0" BorderThickness="1" Maximum="99" SmallChange="1">
                        <ScrollBar.LayoutTransform>
                            <RotateTransform Angle="180" />
                        </ScrollBar.LayoutTransform>
                    </ScrollBar>
                    <TextBox x:Name="p2Name" Grid.Column="5" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Player Two" VerticalAlignment="Top" Margin="3,1,0,0" TextChanged="overlayChanged" />
                    <Label x:Name="p2NameLabel" Padding="0" Grid.Column="6" Content=" Player 2" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,1,0,0" />
                    <TextBox x:Name="eventTextbox" Grid.Row="1" Grid.Column="5" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Tournament" VerticalAlignment="Top" Margin="3,1,0,0" TextChanged="overlayChanged" />
                    <Label x:Name="eventLabel" Grid.Row="1" Grid.Column="6" Padding="0" Content=" Event" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,2,0,1" />
                    <Button x:Name="submitScore" Grid.Column="7" HorizontalAlignment="Left" Grid.RowSpan="2" Height="43" VerticalAlignment="Center" Margin="14,0,5,0" Width="50" Click="submitScore_Click">
                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="13.333">Submit<LineBreak/>Score</TextBlock>
                    </Button>
                </Grid>
            </GroupBox>
            <Grid x:Name="matchesGrid" Margin="3" Grid.IsSharedSizeScope="True" DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Header Row -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Round" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Code" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Station" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Available" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Assigned" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ScrollBar" />
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0" Margin="2" Background="DimGray">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="Round" />
                    </Border>

                    <Border Grid.Column="1" Margin="2" Background="DimGray">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="Code" />
                    </Border>

                    <Border Grid.Column="2" Margin="2" Background="DimGray">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="Player 1" />
                    </Border>

                    <Border Grid.Column="3" Margin="2" Background="DimGray">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="Player 2" />
                    </Border>

                    <Border Grid.Column="4" Margin="2" Background="DimGray">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="Station" />
                    </Border>

                    <Border Grid.Column="5" Margin="2" Background="DimGray">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="Available" />
                    </Border>

                    <Border Grid.Column="6" Margin="2" Background="DimGray">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="Assigned" />
                    </Border>
                </Grid>

                <!-- Match display -->
                <ScrollViewer x:Name="matches" Grid.Row="1" VerticalScrollBarVisibility="Auto" FocusVisualStyle="{x:Null}">
                    <ScrollViewer.Template>
                        <ControlTemplate TargetType="ScrollViewer">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ScrollBar" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Name="PART_ScrollContentPresenter" />
                                <ScrollBar Orientation="Vertical" Grid.Column="1" Grid.Row="0" Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}"
                                           Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" 
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                    <ScrollBar.Template>
                                        <ControlTemplate TargetType="ScrollBar">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="0" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition MaxHeight="0" />
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="3" CornerRadius="5" Background="CornflowerBlue" />
                                                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Thumb.Template>
                                                                <ControlTemplate>
                                                                    <Border Margin="3" CornerRadius="4" Background="WhiteSmoke" Cursor="Hand" />
                                                                </ControlTemplate>
                                                            </Thumb.Template>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                                <!--<Border Margin="3" CornerRadius="5" Background="Blue" Name=""-->
                                            </Grid>
                                        </ControlTemplate>
                                    </ScrollBar.Template>
                                </ScrollBar>
                            </Grid>
                        </ControlTemplate>
                    </ScrollViewer.Template>
                    <ItemsControl ItemsSource="{Binding Source={StaticResource Matches}}" FocusVisualStyle="{x:Null}">
                        <ItemsControl.Resources>
                            <Style x:Key="StandardColorToggleBorder" TargetType="Border">
                                <Setter Property="Background" Value="Gray" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Match.IsMatchInProgress}" Value="True">
                                        <Setter Property="Background" Value="SlateBlue" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Resources>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Round" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Code" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Station" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Available" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Assigned" />
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.Column="0" Margin="2" Style="{StaticResource StandardColorToggleBorder}">
                                            <TextBlock Margin="4" FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="{Binding Match.RoundName}" />
                                        </Border>

                                        <Border Grid.Column="1" Margin="2" Style="{StaticResource StandardColorToggleBorder}">
                                            <TextBlock Margin="4" FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="{Binding Match.Identifier}" />
                                        </Border>

                                        <Button Grid.Column="2" Margin="2,2,17,2" Command="{Binding Player1ToggleMissing}">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border>
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Background" Value="Gray" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Match.Player1.IsMissing}" Value="False">
                                                                        <Setter Property="Background" Value="SlateBlue" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Match.Player1.IsAssignedToStation}" Value="False">
                                                                        <Setter Property="Background" Value="Gray" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Match.Player1.IsMissing}" Value="True">
                                                                        <Setter Property="Background" Value="#E02020" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Toggle Missing" Command="{Binding Player1ToggleMissing}" />
                                                                <Separator />
                                                                <MenuItem Header="Report Victory" Command="{Binding Player1Wins}" />
                                                                <MenuItem Header="Report with Score..." Click="ReportScoreMenuItem_Click" />
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                        <Grid>
                                                            <!--Highlight Border-->
                                                            <Border IsHitTestVisible="False">
                                                                <Border.Style>
                                                                    <Style TargetType="Border">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsFocused}" Value="True">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                            </Border>

                                                            <Viewbox StretchDirection="DownOnly" IsHitTestVisible="False">
                                                                <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Foreground" Value="White" />
                                                                            <Setter Property="FontWeight" Value="Bold" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Match.Player1Id}" Value="{x:Null}">
                                                                                    <Setter Property="Foreground" Value="LightGray" />
                                                                                    <!--<Setter Property="FontWeight" Value="Normal" />-->
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                    <TextBlock.Text>
                                                                        <PriorityBinding>
                                                                            <Binding Path="Match.Player1.Name" />
                                                                            <Binding Path="Match.Player1SourceString" />
                                                                        </PriorityBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>
                                                            </Viewbox>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button x:Name="p1ReportScore" Click="ReportScoreMenuItem_Click" Content="ü" Grid.Column="2" Margin="2" HorizontalAlignment="Right" FontFamily="Wingdings" BorderBrush="{x:Null}" Foreground="White" BorderThickness="0,0,0,0" Width="15">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="#FF5DB972"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#FF7CCD8E"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background" Value="#FF3D9751"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Button Grid.Column="3" Margin="2,2,17,2" Command="{Binding Player2ToggleMissing}">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border>
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="Background" Value="Gray" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Match.Player2.IsMissing}" Value="False">
                                                                        <Setter Property="Background" Value="SlateBlue" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Match.Player2.IsAssignedToStation}" Value="False">
                                                                        <Setter Property="Background" Value="Gray" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Match.Player2.IsMissing}" Value="True">
                                                                        <Setter Property="Background" Value="#E02020" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Toggle Missing" Command="{Binding Player2ToggleMissing}" />
                                                                <Separator />
                                                                <MenuItem Header="Report Victory" Command="{Binding Player2Wins}" />
                                                                <MenuItem Header="Report with Score..." Click="ReportScoreMenuItem_Click" />
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                        <Grid>
                                                            <!--Highlight Border-->
                                                            <Border IsHitTestVisible="False">
                                                                <Border.Style>
                                                                    <Style TargetType="Border">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsFocused}" Value="True">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                            </Border>
                                                            <Viewbox StretchDirection="DownOnly">
                                                                <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Foreground" Value="White" />
                                                                            <Setter Property="FontWeight" Value="Bold" />
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Match.Player2Id}" Value="{x:Null}">
                                                                                    <Setter Property="Foreground" Value="LightGray" />
                                                                                    <!--<Setter Property="FontWeight" Value="Normal" />-->
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                    <TextBlock.Text>
                                                                        <PriorityBinding>
                                                                            <Binding Path="Match.Player2.Name" />
                                                                            <Binding Path="Match.Player2SourceString" />
                                                                        </PriorityBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>
                                                            </Viewbox>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button x:Name="p2ReportScore" Click="ReportScoreMenuItem_Click" Content="ü" Grid.Column="3" Margin="2" HorizontalAlignment="Right" FontFamily="Wingdings" BorderBrush="{x:Null}" Foreground="White" BorderThickness="0,0,0,0" Width="15">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="#FF5DB972"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#FF7CCD8E"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background" Value="#FF3D9751"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>

                                        <Button Grid.Column="4" Margin="2" Command="{Binding CallMatch}" CommandParameter="{Binding ElementName=RootGrid, Path=DataContext.SelectedStation}">
                                            <Button.Template>
                                                <ControlTemplate>
                                                    <Border Style="{StaticResource StandardColorToggleBorder}" Tag="{Binding DataContext, ElementName=RootGrid}">
                                                        <Border.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Assign to Selected Station" Command="{Binding AssignStation}" 
                                                                      CommandParameter="{Binding PlacementTarget.Tag.SelectedStation, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}">
                                                                    <MenuItem.Style>
                                                                        <Style TargetType="MenuItem">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Match.IsMatchInProgress}" Value="True">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding PlacementTarget.Tag.SelectedStation, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" Value="{x:Null}">
                                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </MenuItem.Style>
                                                                </MenuItem>
                                                                <MenuItem Header="Call Match Anywhere" Command="{Binding CallMatchAnywhere}">
                                                                    <MenuItem.Style>
                                                                        <Style TargetType="MenuItem">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Match.IsMatchInProgress}" Value="True">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </MenuItem.Style>
                                                                </MenuItem>
                                                                <MenuItem Header="Clear Station Assignment" Command="{Binding UncallMatch}">
                                                                    <MenuItem.Style>
                                                                        <Style TargetType="MenuItem">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Match.IsMatchInProgress}" Value="False">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </MenuItem.Style>
                                                                </MenuItem>
                                                            </ContextMenu>
                                                        </Border.ContextMenu>
                                                        <Grid>
                                                            <!--Highlight Border-->
                                                            <Border IsHitTestVisible="False">
                                                                <Border.Style>
                                                                    <Style TargetType="Border">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsMouseOver}" Value="True">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}, Path=IsFocused}" Value="True">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                            </Border>
                                                            <TextBlock Margin="4" FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Text="{Binding Match.Player1.StationAssignment}" />
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>

                                        <Border Grid.Column="5" Margin="2" Background="{Binding Match.TimeSinceAvailable, Converter={StaticResource TimeSpanToBrushConv}}">
                                            <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"
                                                   Text="{Binding Match.TimeSinceAvailable, Converter={StaticResource TimeSpanToShortStringConv}}" />
                                        </Border>

                                        <Border Grid.Column="6" Margin="2">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="Background" Value="Gray" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Match.IsMatchInProgress}" Value="True">
                                                            <Setter Property="Background" Value="{Binding Match.Player1.TimeSinceAssigned, Converter={StaticResource TimeSpanToBrushConv}}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center"
                                                   Text="{Binding Match.Player1.TimeSinceAssigned, Converter={StaticResource TimeSpanToShortStringConv}}" />
                                        </Border>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>

                <TextBlock Grid.Row="2" Margin="3" TextWrapping="Wrap" FontSize="16" Foreground="Red" Text="{Binding ErrorMessage}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ErrorMessage}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <Button Grid.Row="1" x:Name="endTournament" Content="End The Tournament" HorizontalAlignment="Center" Width="250" FontSize="21.333" BorderBrush="{x:Null}" Foreground="White" BorderThickness="0,0,0,0" Height="45" Cursor="Hand" Visibility="Collapsed" Click="endTournament_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="#FF5DB972"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF7CCD8E"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF3D9751"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>


                <GroupBox x:Name="instructions" Header="Instructions" Grid.Row="3">
                    <TextBlock Margin="3" TextWrapping="Wrap">
						Click on a player to toggle their missing status. Right click a player or click the green checkmark to report that player's victory. Click on an unassigned station panel to
						assign to selected station or anywhere if no station selected. Right click a station panel to clear station assignment.
						<LineBreak />
						<LineBreak />
						The first "Stream" station is the "Primary Streaming Station". Assigning a match to this station automatically fills in the player names and resets the
						score on the scoreboard. Use the related txt files to automatically update your stream overlays. Update realtime scores quickly by clicking the arrows or scrolling with the mouse wheel.
						<Hyperlink x:Name="hideInstructions" Click="hideInstructions_Click">Hide Instructions</Hyperlink>
                    </TextBlock>
                </GroupBox>
            </Grid>
        </DockPanel>
    </Grid>
</Window>
