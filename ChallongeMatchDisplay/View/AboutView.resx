<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>