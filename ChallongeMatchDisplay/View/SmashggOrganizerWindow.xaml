<?xml version="1.0" encoding="utf-8"?>
<Window x:Class="Fizzi.Applications.ChallongeVisualization.View.SmashggOrganizerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:core="clr-namespace:System;assembly=mscorlib"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:lview="clr-namespace:Fizzi.Applications.ChallongeVisualization.View"
        xmlns:lm="clr-namespace:Fizzi.Applications.ChallongeVisualization.Model"
        Title="Tournament Organizer Control" Height="578.6" Width="917" Icon="/Challonge%20Match%20Display;component/Graphicloads-Food-Drink-Icecream-2.ico" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ObjectDataProvider x:Key="StationTypes" MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="lm:ChallongeStationType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <CollectionViewSource x:Key="Matches" Source="{Binding OpenMatches}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Match.RoundOrder" Direction="Ascending" />
                <scm:SortDescription PropertyName="Match.IsWinners" Direction="Ascending" />
                <scm:SortDescription PropertyName="Match.Identifier" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="Stations" Source="{Binding OpenStations}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Order" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <lview:TimeSpanToBrushConverter x:Key="TimeSpanToBrushConv" />
        <lview:TimeSpanToShortStringConverter x:Key="TimeSpanToShortStringConv" />
        <lview:ObjectEqualityConverter x:Key="ObjectEqualityConv" />
        <lview:NewMatchOptionSelectionConverter x:Key="NewMatchOptionSelectionConv" />

        <Style TargetType="DataGrid">
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
        </Style>
    </Window.Resources>
  <UIElement.InputBindings>
    <KeyBinding Key="F1" Command="{Binding AutoAssignPending}" />
    <KeyBinding Key="F2" Command="{Binding CallPendingAnywhere}" />
  </UIElement.InputBindings>
  <FrameworkElement.Style>
    <Style TargetType="{x:Type Window}">
      <Style.Triggers>
        <DataTrigger Value="True" Binding="{Binding IsBusy}">
          <Setter Property="FrameworkElement.Cursor" Value="Wait" />
        </DataTrigger>
      </Style.Triggers>
    </Style>
  </FrameworkElement.Style>
    <Grid Name="RootGrid">
        <FrameworkElement.Style>
            <Style TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <DataTrigger Value="True" Binding="{Binding IsBusy}">
                        <Setter Property="UIElement.IsHitTestVisible" Value="False" />
                        <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </FrameworkElement.Style>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Menu Grid.ColumnSpan="2" Grid.Row="0" Height="23">
            <MenuItem Header="File">
                <MenuItem Header="Settings" Click="Settings_Click" />
                <MenuItem Header="Exit" Click="ExitMenu_Click" />
            </MenuItem>
            <MenuItem Header="Matches">
                <MenuItem Header="New Match Action">
                    <MenuItem IsCheckable="True" Header="None" IsChecked="{Binding Source={x:Static lm:GlobalSettings.Instance}, Path=SelectedNewMatchAction, Converter={StaticResource NewMatchOptionSelectionConv}, ConverterParameter=0}" />
                    <MenuItem IsCheckable="True" Header="Assign" IsChecked="{Binding Source={x:Static lm:GlobalSettings.Instance}, Path=SelectedNewMatchAction, Converter={StaticResource NewMatchOptionSelectionConv}, ConverterParameter=1}" />
                    <MenuItem IsCheckable="True" Header="Call Anywhere" IsChecked="{Binding Source={x:Static lm:GlobalSettings.Instance}, Path=SelectedNewMatchAction, Converter={StaticResource NewMatchOptionSelectionConv}, ConverterParameter=2}" />
                </MenuItem>
                <Separator />
                <MenuItem Header="Auto-Assign Pending" InputGestureText="F1" Command="{Binding AutoAssignPending}" />
                <MenuItem Header="Call Pending Anywhere" InputGestureText="F2" Command="{Binding CallPendingAnywhere}" />
                <Separator />
                <MenuItem Header="Clear All Station Assignments" Command="{Binding ClearAllAssignments}" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Click="About_Click" />
            </MenuItem>
        </Menu>
        <GroupBox Grid.Row="1" Grid.Column="0" Margin="3" Header="Station Selection">
            <DockPanel>
                <Button Margin="3" DockPanel.Dock="Bottom" Content="Import New Station List" Click="ImportStationsButton_Click" />
                <DockPanel Dock="Bottom" Width="232">
                    <Button Margin="3" DockPanel.Dock="Left" Content="Remove Station" Width="108" Click="RemoveStation_Click" />
                    <Button Margin="3" DockPanel.Dock="Right" Content="Move Down" Width="108" Click="MoveDown_Click" />
                </DockPanel>
                <DockPanel Dock="Bottom" Width="232">
                    <Button Margin="3" DockPanel.Dock="Left" Content="Add Station" Width="108" Click="AddStation_Click" />
                    <Button Margin="3" DockPanel.Dock="Right" Content="Move Up" Width="108" Click="MoveUp_Click" />
                </DockPanel>
                <GroupBox Margin="3" DockPanel.Dock="Bottom" Header="Selection">
                    <TextBlock Margin="3" HorizontalAlignment="Center" Text="{Binding SelectedStation.Name, FallbackValue=No Selection}" />
                </GroupBox>
                <DataGrid Name="StationsDataGrid" Margin="3" SelectionMode="Single" AutoGenerateColumns="False" CanUserAddRows="True" ItemsSource="{Binding Source={StaticResource Stations}}" SelectedItem="{Binding SelectedStation}" CellEditEnding="StationEdit">
                    <FrameworkElement.Resources>
                        <ResourceDictionary>
                            <Style x:Key="SelectedStyle" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <DataTrigger Value="True">
                                        <DataTrigger.Binding>
                                            <MultiBinding Converter="{StaticResource ObjectEqualityConv}">
                                                <Binding />
                                                <Binding ElementName="StationsDataGrid" Path="DataContext.SelectedStation" />
                                            </MultiBinding>
                                        </DataTrigger.Binding>
                                        <Setter Property="Background" Value="{x:Static SystemColors.HighlightBrush}" />
                                        <Setter Property="BorderBrush" Value="{x:Static SystemColors.HighlightBrush}" />
                                        <Setter Property="Foreground" Value="#FFFFFFFF" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ResourceDictionary>
                    </FrameworkElement.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="False" Header="Name" Width="*" CellStyle="{StaticResource SelectedStyle}" Binding="{Binding Name}" />
                        <DataGridComboBoxColumn IsReadOnly="False" Header="Auto Type" Width="Auto" CellStyle="{StaticResource SelectedStyle}" ItemsSource="{Binding Source={StaticResource StationTypes}}" SelectedItemBinding="{Binding Type}" />
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
        </GroupBox>
        <DockPanel Grid.Row="1" Grid.Column="1">
            <GroupBox Name="scoreboard" Header="Primary Streaming Station" DockPanel.Dock="Top" Margin="0,3,4,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Label Name="p1NameLabel" Padding="0" Content="Player 1 " HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,1,0,0" />
                    <TextBox Name="p1Name" Grid.Column="1" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Player One" VerticalAlignment="Top" Margin="0,1,3,0" TextChanged="overlayChanged" />
                    <Label Name="roundLabel" Grid.Row="1" Padding="0" Content="Round " HorizontalAlignment="Right" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,2,0,1" />
                    <TextBox Name="round" Grid.Row="1" Grid.Column="1" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Casuals" VerticalAlignment="Top" Margin="0,1,3,0" TextChanged="overlayChanged" />
                    <TextBox Name="p1Score" Padding="17,-14,0,0" Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="0" Width="65" Margin="0" Grid.RowSpan="2" FontSize="48" FontWeight="Bold" MaxLines="1" MinLines="1" TextAlignment="Center" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Center" Height="43" PreviewMouseWheel="ScoreScrollWheel" TextChanged="overlayChanged" />
                    <ScrollBar Name="p1ScoreScroll" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.RowSpan="2" Width="18" Height="41" Margin="1,1,0,0" BorderThickness="1" Maximum="99" SmallChange="1" Value="{Binding ElementName=p1Score, Path=Text}">
                        <FrameworkElement.LayoutTransform>
                            <RotateTransform Angle="180" />
                        </FrameworkElement.LayoutTransform>
                    </ScrollBar>
                    <Button Name="swap" Grid.Column="3" HorizontalAlignment="Left" Width="75" Grid.RowSpan="2" Height="43" VerticalAlignment="Center" Margin="5,0" Click="swap_Click">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Marlett" FontSize="20" Text="3" Margin="0,2,0,0" />
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Margin="-2,0,0,0" LineStackingStrategy="BlockLineHeight" LineHeight="13.333">Switch<LineBreak />Sides</TextBlock>
                            <TextBlock DockPanel.Dock="Right" HorizontalAlignment="Right" FontFamily="Marlett" FontSize="20" Text="4" VerticalAlignment="Center" Margin="0,2,0,0" />
                        </DockPanel>
                    </Button>
                    <TextBox Name="p2Score" Padding="0,-14,19,0" Grid.Row="0" Grid.Column="4" HorizontalAlignment="Left" TextWrapping="NoWrap" Text="0" Width="65" Margin="0" Grid.RowSpan="2" FontSize="48" FontWeight="Bold" MaxLines="1" MinLines="1" TextAlignment="Center" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Center" Height="43" PreviewMouseWheel="ScoreScrollWheel" TextChanged="overlayChanged" />
                    <ScrollBar Name="p2ScoreScroll" Grid.Column="4" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.RowSpan="2" Width="18" Height="41" Margin="0,1,1,0" BorderThickness="1" Maximum="99" SmallChange="1" Value="{Binding ElementName=p2Score, Path=Text}">
                        <FrameworkElement.LayoutTransform>
                            <RotateTransform Angle="180" />
                        </FrameworkElement.LayoutTransform>
                    </ScrollBar>
                    <TextBox Name="p2Name" Grid.Column="5" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Player Two" VerticalAlignment="Top" Margin="3,1,0,0" TextChanged="overlayChanged" />
                    <Label Name="p2NameLabel" Padding="0" Grid.Column="6" Content=" Player 2" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,1,0,0" />
                    <TextBox Name="eventTextbox" Grid.Row="1" Grid.Column="5" Height="20" HorizontalAlignment="Stretch" TextWrapping="NoWrap" Text="Tournament" VerticalAlignment="Top" Margin="3,1,0,0" TextChanged="overlayChanged" />
                    <Label Name="eventLabel" Grid.Row="1" Grid.Column="6" Padding="0" Content=" Event" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Height="17" Margin="0,2,0,1" />
                    <Button Name="submitScore" Grid.Column="7" HorizontalAlignment="Left" Grid.RowSpan="2" Height="43" VerticalAlignment="Center" Margin="14,0,5,0" Width="50" Click="submitScore_Click">
                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="13.333">Submit<LineBreak />Score</TextBlock>
                    </Button>
                </Grid>
            </GroupBox>
            <Grid Name="matchesGrid" Margin="3" IsSharedSizeScope="True" DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Round" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Code" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Station" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Available" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Assigned" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ScrollBar" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Margin="2" Background="#FF696969">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="Round" />
                    </Border>
                    <Border Grid.Column="1" Margin="2" Background="#FF696969">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="Code" />
                    </Border>
                    <Border Grid.Column="2" Margin="2" Background="#FF696969">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="Player 1" />
                    </Border>
                    <Border Grid.Column="3" Margin="2" Background="#FF696969">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="Player 2" />
                    </Border>
                    <Border Grid.Column="4" Margin="2" Background="#FF696969">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="Station" />
                    </Border>
                    <Border Grid.Column="5" Margin="2" Background="#FF696969">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="Available" />
                    </Border>
                    <Border Grid.Column="6" Margin="2" Background="#FF696969">
                        <TextBlock Margin="4" FontSize="16" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="Assigned" />
                    </Border>
                </Grid>
                <ScrollViewer Name="matches" Grid.Row="1" VerticalScrollBarVisibility="Auto" FocusVisualStyle="{x:Null}">
                    <Control.Template>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ScrollBar" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" />
                                <ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Grid.Row="0" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                    <Control.Template>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="0" />
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition MaxHeight="0" />
                                                </Grid.RowDefinitions>
                                                <Border Grid.RowSpan="3" CornerRadius="5" Background="#FF6495ED" />
                                                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                                                    <Track.Thumb>
                                                        <Thumb>
                                                            <Control.Template>
                                                                <ControlTemplate>
                                                                    <Border Margin="3" CornerRadius="4" Background="#FFF5F5F5" Cursor="Hand" />
                                                                </ControlTemplate>
                                                            </Control.Template>
                                                        </Thumb>
                                                    </Track.Thumb>
                                                </Track>
                                            </Grid>
                                        </ControlTemplate>
                                    </Control.Template>
                                </ScrollBar>
                            </Grid>
                        </ControlTemplate>
                    </Control.Template>
                    <ItemsControl ItemsSource="{Binding Source={StaticResource Matches}}" FocusVisualStyle="{x:Null}">
                        <FrameworkElement.Resources>
                            <ResourceDictionary>
                                <Style x:Key="StandardColorToggleBorder" TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="#FF808080" />
                                    <Style.Triggers>
                                        <DataTrigger Value="True" Binding="{Binding Match.IsMatchInProgress}">
                                            <Setter Property="Background" Value="#FF6A5ACD" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ResourceDictionary>
                        </FrameworkElement.Resources>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Round" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Code" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Station" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Available" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Assigned" />
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.Column="0" Margin="2" Style="{StaticResource StandardColorToggleBorder}">
                                            <TextBlock Margin="4" FontSize="14" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="{Binding Match.RoundName}" />
                                        </Border>
                                        <Border Grid.Column="1" Margin="2" Style="{StaticResource StandardColorToggleBorder}">
                                            <TextBlock Margin="4" FontSize="14" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="{Binding Match.Identifier}" />
                                        </Border>
                                        <Button Grid.Column="2" Margin="2,2,17,2" Command="{Binding Player1ToggleMissing}">
                                            <Control.Template>
                                                <ControlTemplate>
                                                    <Border>
                                                        <FrameworkElement.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="Background" Value="#FF808080" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Value="False" Binding="{Binding Match.Player1.IsMissing}">
                                                                        <Setter Property="Background" Value="#FF6A5ACD" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Value="False" Binding="{Binding Match.Player1.IsAssignedToStation}">
                                                                        <Setter Property="Background" Value="#FF808080" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Value="True" Binding="{Binding Match.Player1.IsMissing}">
                                                                        <Setter Property="Background" Value="#E02020" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </FrameworkElement.Style>
                                                        <FrameworkElement.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Toggle Missing" Command="{Binding Player1ToggleMissing}" />
                                                                <Separator />
                                                                <MenuItem Header="Report Victory" Command="{Binding Player1Wins}" />
                                                                <MenuItem Header="Report with Score..." Click="ReportScoreMenuItem_Click" />
                                                            </ContextMenu>
                                                        </FrameworkElement.ContextMenu>
                                                        <Grid>
                                                            <Border IsHitTestVisible="False">
                                                                <FrameworkElement.Style>
                                                                    <Style TargetType="{x:Type Border}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}}">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Value="True" Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}}">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </FrameworkElement.Style>
                                                            </Border>
                                                            <Viewbox StretchDirection="DownOnly" IsHitTestVisible="False">
                                                                <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center">
                                  <FrameworkElement.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                      <Setter Property="Foreground" Value="#FFFFFFFF" />
                                      <Setter Property="FontWeight" Value="Bold" />
                                      <Style.Triggers>
                                        <DataTrigger Binding="{Binding Match.Player1Id}" Value="{x:Null}">
                                          <Setter Property="Foreground" Value="#FFD3D3D3" />
                                        </DataTrigger>
                                      </Style.Triggers>
                                    </Style>
                                  </FrameworkElement.Style>
                                                                    <TextBlock.Text>
                                                                        <PriorityBinding>
                                                                            <Binding Path="Match.Player1.Name" />
                                                                            <Binding Path="Match.Player1SourceString" />
                                                                        </PriorityBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>
                                                            </Viewbox>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Control.Template>
                                        </Button>
                                        <Button Name="p1ReportScore" Content="ü" Grid.Column="2" Margin="2" HorizontalAlignment="Right" FontFamily="Wingdings" Foreground="#FFFFFFFF" BorderThickness="0,0,0,0" Width="15" BorderBrush="{x:Null}" Click="ReportScoreMenuItem_Click">
                                            <FrameworkElement.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="#FF5DB972" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#FF7CCD8E" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background" Value="#FF3D9751" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </FrameworkElement.Style>
                                        </Button>
                                        <Button Grid.Column="3" Margin="2,2,17,2" Command="{Binding Player2ToggleMissing}">
                                            <Control.Template>
                                                <ControlTemplate>
                                                    <Border>
                                                        <FrameworkElement.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Setter Property="Background" Value="#FF808080" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Value="False" Binding="{Binding Match.Player2.IsMissing}">
                                                                        <Setter Property="Background" Value="#FF6A5ACD" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Value="False" Binding="{Binding Match.Player2.IsAssignedToStation}">
                                                                        <Setter Property="Background" Value="#FF808080" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Value="True" Binding="{Binding Match.Player2.IsMissing}">
                                                                        <Setter Property="Background" Value="#E02020" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </FrameworkElement.Style>
                                                        <FrameworkElement.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Toggle Missing" Command="{Binding Player2ToggleMissing}" />
                                                                <Separator />
                                                                <MenuItem Header="Report Victory" Command="{Binding Player2Wins}" />
                                                                <MenuItem Header="Report with Score..." Click="ReportScoreMenuItem_Click" />
                                                            </ContextMenu>
                                                        </FrameworkElement.ContextMenu>
                                                        <Grid>
                                                            <Border IsHitTestVisible="False">
                                                                <FrameworkElement.Style>
                                                                    <Style TargetType="{x:Type Border}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}}">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Value="True" Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}}">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </FrameworkElement.Style>
                                                            </Border>
                                                            <Viewbox StretchDirection="DownOnly">
                                                                <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" HorizontalAlignment="Center">
                                  <FrameworkElement.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                      <Setter Property="Foreground" Value="#FFFFFFFF" />
                                      <Setter Property="FontWeight" Value="Bold" />
                                      <Style.Triggers>
                                        <DataTrigger Binding="{Binding Match.Player2Id}" Value="{x:Null}">
                                          <Setter Property="Foreground" Value="#FFD3D3D3" />
                                        </DataTrigger>
                                      </Style.Triggers>
                                    </Style>
                                  </FrameworkElement.Style>
                                                                    <TextBlock.Text>
                                                                        <PriorityBinding>
                                                                            <Binding Path="Match.Player2.Name" />
                                                                            <Binding Path="Match.Player2SourceString" />
                                                                        </PriorityBinding>
                                                                    </TextBlock.Text>
                                                                </TextBlock>
                                                            </Viewbox>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Control.Template>
                                        </Button>
                                        <Button Name="p2ReportScore" Content="ü" Grid.Column="3" Margin="2" HorizontalAlignment="Right" FontFamily="Wingdings" Foreground="#FFFFFFFF" BorderThickness="0,0,0,0" Width="15" BorderBrush="{x:Null}" Click="ReportScoreMenuItem_Click">
                                            <FrameworkElement.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Background" Value="#FF5DB972" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border Background="{TemplateBinding Background}">
                                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Style.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#FF7CCD8E" />
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter Property="Background" Value="#FF3D9751" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </FrameworkElement.Style>
                                        </Button>
                                        <Button Grid.Column="4" Margin="2" Command="{Binding CallMatch}" CommandParameter="{Binding ElementName=RootGrid, Path=DataContext.SelectedStation}">
                                            <Control.Template>
                                                <ControlTemplate>
                                                    <Border Style="{StaticResource StandardColorToggleBorder}" Tag="{Binding DataContext, ElementName=RootGrid}">
                                                        <FrameworkElement.ContextMenu>
                                                            <ContextMenu>
                                                                <MenuItem Header="Assign to Selected Station" Command="{Binding AssignStation}" CommandParameter="{Binding PlacementTarget.Tag.SelectedStation, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}">
                                                                    <FrameworkElement.Style>
                                                                        <Style TargetType="{x:Type MenuItem}">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Value="True" Binding="{Binding Match.IsMatchInProgress}">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding PlacementTarget.Tag.SelectedStation, RelativeSource={RelativeSource FindAncestor, AncestorType=ContextMenu}}" Value="{x:Null}">
                                                                                    <Setter Property="IsEnabled" Value="False" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </FrameworkElement.Style>
                                                                </MenuItem>
                                                                <MenuItem Header="Call Match Anywhere" Command="{Binding CallMatchAnywhere}">
                                                                    <FrameworkElement.Style>
                                                                        <Style TargetType="{x:Type MenuItem}">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Value="True" Binding="{Binding Match.IsMatchInProgress}">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </FrameworkElement.Style>
                                                                </MenuItem>
                                                                <MenuItem Header="Clear Station Assignment" Command="{Binding UncallMatch}">
                                                                    <FrameworkElement.Style>
                                                                        <Style TargetType="{x:Type MenuItem}">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Value="False" Binding="{Binding Match.IsMatchInProgress}">
                                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </FrameworkElement.Style>
                                                                </MenuItem>
                                                            </ContextMenu>
                                                        </FrameworkElement.ContextMenu>
                                                        <Grid>
                                                            <Border IsHitTestVisible="False">
                                                                <FrameworkElement.Style>
                                                                    <Style TargetType="{x:Type Border}">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Value="True" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}}">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Value="True" Binding="{Binding Path=IsFocused, RelativeSource={RelativeSource AncestorType=Border, Mode=FindAncestor}}">
                                                                                <Setter Property="Background" Value="#40FFFFFF" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </FrameworkElement.Style>
                                                            </Border>
                                                            <TextBlock Margin="4" FontSize="14" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="{Binding Match.Player1.StationAssignment}" />
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Control.Template>
                                        </Button>
                                        <Border Grid.Column="5" Margin="2" Background="{Binding Match.TimeSinceAvailable, Converter={StaticResource TimeSpanToBrushConv}}">
                                            <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="{Binding Match.TimeSinceAvailable, Converter={StaticResource TimeSpanToShortStringConv}}" />
                                        </Border>
                                        <Border Grid.Column="6" Margin="2">
                                            <FrameworkElement.Style>
                                                <Style TargetType="{x:Type Border}">
                                                    <Setter Property="Background" Value="#FF808080" />
                                                    <Style.Triggers>
                                                        <DataTrigger Value="True" Binding="{Binding Match.IsMatchInProgress}">
                                                            <Setter Property="Background" Value="{Binding Match.Player1.TimeSinceAssigned, Converter={StaticResource TimeSpanToBrushConv}}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </FrameworkElement.Style>
                                            <TextBlock Margin="4" IsHitTestVisible="False" FontSize="14" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Center" Text="{Binding Match.Player1.TimeSinceAssigned, Converter={StaticResource TimeSpanToShortStringConv}}" />
                                        </Border>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
                <TextBlock Grid.Row="2" Margin="3" TextWrapping="Wrap" FontSize="16" Foreground="#FFFF0000" Text="{Binding ErrorMessage}">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type TextBlock}">
              <Style.Triggers>
                <DataTrigger Binding="{Binding ErrorMessage}" Value="{x:Null}">
                  <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
                </TextBlock>
                <Button Name="endTournament" Grid.Row="1" Content="End The Tournament" HorizontalAlignment="Center" Width="250" FontSize="21.333" Foreground="#FFFFFFFF" BorderThickness="0,0,0,0" Height="45" Cursor="Hand" Visibility="Collapsed" BorderBrush="{x:Null}" Click="endTournament_Click">
                    <FrameworkElement.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="#FF5DB972" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FF7CCD8E" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF3D9751" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </FrameworkElement.Style>
                </Button>
                <GroupBox Name="instructions" Header="Instructions" Grid.Row="3">
                    <TextBlock Margin="3" TextWrapping="Wrap">Click on a player to toggle their missing status. Right click a player or click the green checkmark to report that player's victory. Click on an unassigned station panel to assign to selected station or anywhere if no station selected. Right click a station panel to clear station assignment.<LineBreak /><LineBreak />The first "Stream" station is the "Primary Streaming Station". Assigning a match to this station automatically fills in the player names and resets the score on the scoreboard. Use the related txt files to automatically update your stream overlays. Update realtime scores quickly by clicking the arrows or scrolling with the mouse wheel. <Hyperlink Name="hideInstructions" Click="hideInstructions_Click">Hide Instructions</Hyperlink></TextBlock>
                </GroupBox>
            </Grid>
        </DockPanel>
    </Grid>
</Window>